
package VentanasFrame;

import Principal.ProyectoFinal_IPC1;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Editor extends javax.swing.JFrame {

    public Editor() {
        initComponents();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("EDITOR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SeleccionarButton = new javax.swing.JButton();
        EjecutarButton = new javax.swing.JButton();
        CopiarJPEGCheckBox = new javax.swing.JCheckBox();
        JpegBmpCheckBox = new javax.swing.JCheckBox();
        ModificarImagenCheckBox = new javax.swing.JCheckBox();
        RGBSepiaCheckBox = new javax.swing.JCheckBox();
        BlancoNegroCheckBox = new javax.swing.JCheckBox();
        SalirButton = new javax.swing.JButton();
        imagenLabel = new javax.swing.JLabel();
        DireccionLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SeleccionarButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SeleccionarButton.setForeground(new java.awt.Color(0, 0, 0));
        SeleccionarButton.setText("Seleccionar Imagen");
        SeleccionarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarButtonActionPerformed(evt);
            }
        });

        EjecutarButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        EjecutarButton.setForeground(new java.awt.Color(0, 0, 0));
        EjecutarButton.setText("Ejecutar");
        EjecutarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarButtonActionPerformed(evt);
            }
        });

        CopiarJPEGCheckBox.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        CopiarJPEGCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        CopiarJPEGCheckBox.setText("Copiar JPEG");

        JpegBmpCheckBox.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        JpegBmpCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        JpegBmpCheckBox.setText("JPEG a BMP y viceversa");

        ModificarImagenCheckBox.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        ModificarImagenCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        ModificarImagenCheckBox.setText("Modificar Imagen");

        RGBSepiaCheckBox.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        RGBSepiaCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        RGBSepiaCheckBox.setText("Rojo, Verde, Azul & Sepia");

        BlancoNegroCheckBox.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        BlancoNegroCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        BlancoNegroCheckBox.setText("Blanco y Negro");
        BlancoNegroCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlancoNegroCheckBoxActionPerformed(evt);
            }
        });

        SalirButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SalirButton.setForeground(new java.awt.Color(0, 0, 0));
        SalirButton.setText("Salir");
        SalirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirButtonActionPerformed(evt);
            }
        });

        imagenLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DireccionLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DIRECCIÃ“N:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CopiarJPEGCheckBox)
                            .addComponent(JpegBmpCheckBox)
                            .addComponent(RGBSepiaCheckBox)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(BlancoNegroCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ModificarImagenCheckBox, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(imagenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DireccionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(EjecutarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addComponent(SeleccionarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(SeleccionarButton)
                    .addComponent(DireccionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EjecutarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SalirButton))
                            .addComponent(imagenLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(JpegBmpCheckBox)
                        .addGap(3, 3, 3)
                        .addComponent(CopiarJPEGCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RGBSepiaCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ModificarImagenCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BlancoNegroCheckBox)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirButtonActionPerformed
        VentanaPrincipal ventanaPrincipal = new VentanaPrincipal();
        ventanaPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_SalirButtonActionPerformed
    String ext;

    private void SeleccionarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarButtonActionPerformed
        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Imagenes", "jpg", "JPEG", "bmp");
        selector.setFileFilter(extensionFilter);
        
        int resultado = selector.showOpenDialog(this);

        /*
        JFileChooser fileChoseer = new JFileChooser();
        
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Imagenes", "jpg", "JPEG", "bmp");
        fileChoseer.setFileFilter(extensionFilter);
        */
 
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = selector.getSelectedFile();

            ImageIcon imagen = new ImageIcon(archivo.getAbsolutePath());
            Image imagenRedimensionada = imagen.getImage().getScaledInstance(imagenLabel.getWidth(), imagenLabel.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon imagenRedimensionadaIcon = new ImageIcon(imagenRedimensionada);
    
            imagenLabel.setIcon(imagenRedimensionadaIcon);
            DireccionLabel.setText(archivo.getAbsolutePath());
            String direccion = DireccionLabel.getText();
        }
    }//GEN-LAST:event_SeleccionarButtonActionPerformed

    private void EjecutarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarButtonActionPerformed
        String ruta = DireccionLabel.getText();

        if (ruta.equals("")) {
            JOptionPane.showMessageDialog(null, "Cargar Una Imagen Primero", "Alerta", JOptionPane.WARNING_MESSAGE);
        } else if (JpegBmpCheckBox.isSelected() == true || CopiarJPEGCheckBox.isSelected() || RGBSepiaCheckBox.isSelected() == true || ModificarImagenCheckBox.isSelected() == true || BlancoNegroCheckBox.isSelected() == true) {
            //Evaluar que tipo de archivo es.
            char ch;
            int len;
            if (ruta == null || (len = ruta.length()) == 0 || (ch = ruta.charAt(len - 1)) == '/' || ch == '\\' || ch == '.') {
                ext = "";
            }
            int dotInd = ruta.lastIndexOf('.'), sepInd = Math.max(ruta.lastIndexOf('/'), ruta.lastIndexOf('\\'));
            if (dotInd <= sepInd) {
                ext = "";
            } else {
                ext = ruta.substring(dotInd + 1).toLowerCase();
            }
            if (ext.equals("jpg") || ext.equals("bmp")) {
                        try {

                            //Cambiar a formato BMP a JPEG o viceversa
                            if (JpegBmpCheckBox.isSelected() == true) {
                                if(ext.equals("jpg")){
                                   ProyectoFinal_IPC1.jpgToBmp(ruta); 
                                }else{
                                   ProyectoFinal_IPC1.bmpToJpg(ruta);  
                                }
                            }

                            //Copiar Imagen jpg
                            if (CopiarJPEGCheckBox.isSelected() == true) {
                                ProyectoFinal_IPC1.copiaJPEG(ruta);
                            }

                            //Colocar Filtros a las imagenes
                            if (RGBSepiaCheckBox.isSelected() == true) {
                                String Serpia = "Serpia-";
                                ProyectoFinal_IPC1.convertirColores(ruta, Serpia, 1, 1, 1);
                                String Red = "Red-";
                                ProyectoFinal_IPC1.convertirColores(ruta, Red, 1, 0, 0);
                                String Green = "Green-";
                                ProyectoFinal_IPC1.convertirColores(ruta, Green, 0, 1, 0);
                                String Blue = "Blue-";
                                ProyectoFinal_IPC1.convertirColores(ruta, Blue, 0, 0, 1);
                            }

                            //Modificar En Eje Vertical & Horizontal
                            if (ModificarImagenCheckBox.isSelected() == true) {
                                ProyectoFinal_IPC1.rotarHorizontal(ruta);
                            }

                            //Filtro en Blanco y Negro
                            if (BlancoNegroCheckBox.isSelected() == true) {
                                ProyectoFinal_IPC1.convertirBlancoNegro(ruta);
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
            }else{
                JOptionPane.showMessageDialog(null, "La imagen debe estar en formato jpg Ã³ bmp", "Alerta", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Â¿Que Quieres Hacer?", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_EjecutarButtonActionPerformed

    private void BlancoNegroCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlancoNegroCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BlancoNegroCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox BlancoNegroCheckBox;
    private javax.swing.JCheckBox CopiarJPEGCheckBox;
    private javax.swing.JLabel DireccionLabel;
    private javax.swing.JButton EjecutarButton;
    private javax.swing.JCheckBox JpegBmpCheckBox;
    private javax.swing.JCheckBox ModificarImagenCheckBox;
    private javax.swing.JCheckBox RGBSepiaCheckBox;
    private javax.swing.JButton SalirButton;
    private javax.swing.JButton SeleccionarButton;
    private javax.swing.JLabel imagenLabel;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
